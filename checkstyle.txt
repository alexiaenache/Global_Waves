Starting audit...
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:16:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getPlayedForTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getPlayedForTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:20:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setPlayedForTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setPlayedForTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:20:34: Parameter playedForTime should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:24:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getFollowers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getFollowers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:28:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:32:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:32:29: Parameter duration should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:36:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setFollowers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setFollowers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:36:30: Parameter followers should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:40:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'addSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'addSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:40:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:40:25: Parameter song should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:44:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'removeSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'removeSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:44:28: Parameter song should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:47:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:51:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:51:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:55:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'isPublic' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'isPublic' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:59:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setPublic' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setPublic' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:59:27: Parameter aPublic should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:63:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:67:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:67:26: Parameter songs should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:71:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:75:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Playlist.java:75:26: Parameter owner should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:25:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:29:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:29:28: Parameter filters should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:33:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:37:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:37:28: Parameter command should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:42:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:46:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:46:25: Parameter type should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:50:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:54:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:54:29: Parameter username should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:58:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:62:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:62:30: Parameter timestamp should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:66:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getItemNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getItemNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:70:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setItemNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setItemNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:70:31: Parameter itemNumber should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:74:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getPlaylistName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getPlaylistName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:78:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setPlaylistName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setPlaylistName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:78:33: Parameter playlistName should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:82:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getPlaylistId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getPlaylistId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:86:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setPlaylistId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setPlaylistId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:86:31: Parameter playlistIl should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:90:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getSeed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getSeed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:94:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setSeed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setSeed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Command.java:94:25: Parameter seed should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Like.java:8:5: Class 'Like' looks like designed for extension (can be subclassed), but the method 'setLike' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Like' final or making the method 'setLike' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Like.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Like.java:8:25: Parameter c should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Like.java:13:5: Class 'Like' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Like' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Like.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Like.java:13:21: Parameter player should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Like.java:24:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Like.java:26:16: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Like.java:29:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Like.java:39:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:3:8: Unused import - fileio.input.LibraryInput. [UnusedImports]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:10:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'setSearch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'setSearch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:10:27: Parameter comm should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:17:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'resetSearch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'resetSearch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:17:29: Parameter player should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:17:42: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:17:43: Parameter username should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:18:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:19:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:21:3: Comment matches to-do format 'TODO:'. [TodoComment]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:27:48: Empty statement. [EmptyStatement]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:33:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:33:21: Parameter player should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:35:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:50:29: Parameter player should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:79:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:79:27: '5' is a magic number. [MagicNumber]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:80:54: '5' is a magic number. [MagicNumber]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:85:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'searchSongName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'searchSongName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:85:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:85:48: Parameter songs should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:85:76: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:96:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'searchSongLyrics' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'searchSongLyrics' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:96:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:96:50: Parameter songs should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:96:78: Parameter Lyrics should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:96:85: Name 'Lyrics' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:107:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'searchSongGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'searchSongGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:107:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:107:49: Parameter songs should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:107:77: Parameter Genre should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:107:84: Name 'Genre' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:119:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'searchSongAritst' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'searchSongAritst' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:119:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:119:50: Parameter songs should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:119:78: Parameter artist should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:130:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'searchSongAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'searchSongAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:130:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:130:49: Parameter songs should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:130:77: Parameter album should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:141:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'searchSongTags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'searchSongTags' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:141:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:141:48: Parameter songs should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:141:76: Parameter tags should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:160: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:160:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'searchSongReleaseYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'searchSongReleaseYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:160:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:160:55: Parameter songs should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:160:83: Parameter releaseYear should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:173: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:173:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'searchSongReleaseYearBigger' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'searchSongReleaseYearBigger' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:173:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:173:61: Parameter songs should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:173:89: Parameter releaseYear should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:183: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:183:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'searchSongReleaseYearSmaller' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'searchSongReleaseYearSmaller' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:183:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:183:62: Parameter songs should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:183:90: Parameter releaseYear should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:194:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'searchPodcast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'searchPodcast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:194:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:194:31: Parameter player should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:206:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:206:30: '5' is a magic number. [MagicNumber]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:207:60: '5' is a magic number. [MagicNumber]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:211: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:211:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'searchPodcastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'searchPodcastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:211:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:211:54: Parameter podcasts should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:211:88: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:221: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:221:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'searchPodcastOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'searchPodcastOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:221:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:221:55: Parameter podcasts should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:221:89: Parameter owner should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:231:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'searchPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'searchPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:231:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:231:32: Parameter player should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:235:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:236:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:247:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:247:31: '5' is a magic number. [MagicNumber]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:248:62: '5' is a magic number. [MagicNumber]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:257:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'searchPlaylistName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'searchPlaylistName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:257:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:257:51: Parameter playlists should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:257:82: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:259:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:268:5: Class 'Search' looks like designed for extension (can be subclassed), but the method 'searchPlaylistOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Search' final or making the method 'searchPlaylistOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:268:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:268:52: Parameter playlists should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:268:83: Parameter owner should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Search.java:270:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:21:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getLib' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getLib' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:25:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setLib' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setLib' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:25:24: Parameter lib should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:28:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setSerchedSongsUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setSerchedSongsUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:28:37: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:28:50: Parameter songs should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:28:78: Parameter timestamp should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:29:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:38: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:38:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setSearchedPodcastsUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setSearchedPodcastsUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:38:41: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:38:54: Parameter podcasts should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:38:88: Parameter timestamp should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:48:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addOutputSearchMapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addOutputSearchMapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:48:39: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:60:16: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:61: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:70:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addOutputSearchPlaylistMapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addOutputSearchPlaylistMapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:70:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:70:47: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:76:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:81:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:89:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addOutputSelectMapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addOutputSelectMapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:89:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:89:39: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:89:55: Parameter successfulSelect should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:96:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:101:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:106:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:111:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:123:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addOutputLoadMapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addOutputLoadMapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:123:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:123:37: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:129:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:129:73: '==' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:129:73: '==' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:131:16: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:140: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:140:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addOutputStatusMapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addOutputStatusMapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:140:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:140:43: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:140:59: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:140:72: Parameter remainedTime should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:140:90: Parameter repeatMessage should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:145:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:145:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:156:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addOutputPlayPauseMapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addOutputPlayPauseMapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:156:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:156:42: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:162:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:164:16: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:166:16: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:166:64: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:172:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addOutputCreatePlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addOutputCreatePlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:172:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:172:41: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:172:57: Parameter found should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:178:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:186:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addOutputAddRemoveInPlaylistMapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addOutputAddRemoveInPlaylistMapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:186:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:186:52: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:186:68: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:194:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addOutputShowPlaylistsMapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addOutputShowPlaylistsMapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:194:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:194:46: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:200:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:222:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addOutputShowPreferredSongsMapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addOutputShowPreferredSongsMapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:222:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:222:51: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:228:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:236:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addNewUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addNewUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:236:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:236:28: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:241:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'copyAllUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'copyAllUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:241:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:241:30: Parameter users should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:241:51: 'users' hides a field. [HiddenField]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:243:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:250:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addOutputLikeMapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addOutputLikeMapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:250:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:250:37: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:250:53: Parameter message should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:259:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:263:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:263:27: Parameter output should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:267:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getMapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getMapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:271:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setMapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setMapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:271:27: Parameter mapper should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:274:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:278:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Player.java:278:26: Parameter users should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPlaylists.java:3:43: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPlaylists.java:4:5: Class 'ShowPlaylists' looks like designed for extension (can be subclassed), but the method 'setShowPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowPlaylists' final or making the method 'setShowPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPlaylists.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPlaylists.java:4:34: Parameter comm should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPlaylists.java:9:5: Class 'ShowPlaylists' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowPlaylists' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPlaylists.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPlaylists.java:9:21: Parameter player should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPlaylists.java:12:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPlaylists.java:13:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/CreatePlaylist.java:5:44: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/CreatePlaylist.java:6:5: Class 'CreatePlaylist' looks like designed for extension (can be subclassed), but the method 'setCreatePlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CreatePlaylist' final or making the method 'setCreatePlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/CreatePlaylist.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/CreatePlaylist.java:6:35: Parameter comm should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/CreatePlaylist.java:12:5: Class 'CreatePlaylist' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CreatePlaylist' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/CreatePlaylist.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/CreatePlaylist.java:12:21: Parameter player should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/CreatePlaylist.java:16:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/CreatePlaylist.java:17:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/CreatePlaylist.java:22:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/CreatePlaylist.java:33:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:7:50: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:8:5: Class 'AddRemoveInPlaylist' looks like designed for extension (can be subclassed), but the method 'setAddRemoveInPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddRemoveInPlaylist' final or making the method 'setAddRemoveInPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:8:40: Parameter comm should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:14:5: Class 'AddRemoveInPlaylist' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AddRemoveInPlaylist' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:14:21: Parameter player should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:17:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:18:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:25:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:27:16: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:29:16: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:37:21: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:44:21: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:51:21: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/AddRemoveInPlaylist.java:56: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PlayPause.java:4:5: Class 'PlayPause' looks like designed for extension (can be subclassed), but the method 'setPlayPause' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayPause' final or making the method 'setPlayPause' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PlayPause.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PlayPause.java:4:30: Parameter c should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PlayPause.java:9:5: Class 'PlayPause' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayPause' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PlayPause.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PlayPause.java:9:21: Parameter player should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PlayPause.java:12:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PlayPause.java:13:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PlayPause.java:18:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PlayPause.java:23:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PlayPause.java:28: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:16:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'countInitializedFildes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'countInitializedFildes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:18:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:21:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:24:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:27:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:30:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:33:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:36:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:39:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:45:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:49:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:49:26: Parameter album should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:53:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getLyrics' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getLyrics' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:57:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setLyrics' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setLyrics' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:57:27: Parameter lyrics should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:61:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:65:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:65:26: Parameter genre should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:69:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getReleaseYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getReleaseYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:73:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setReleaseYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setReleaseYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:73:32: Parameter releaseYear should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:77:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getArtist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getArtist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:81:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setArtist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setArtist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:81:27: Parameter artist should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:85:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:89:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:89:26: Parameter owner should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:95:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:99:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:99:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:103:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getTags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getTags' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:107:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setTags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setTags' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Filters.java:107:25: Parameter tags should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:10:5: Class 'Load' looks like designed for extension (can be subclassed), but the method 'setLoad' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Load' final or making the method 'setLoad' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:10:25: Parameter comm should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:15:5: Class 'Load' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Load' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:15:21: Parameter player should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:18:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:19:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:27:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:44:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:45:14: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:53:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:53:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:57:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:57:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:61:17: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:64:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:69:16: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:77:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:82:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Load.java:82:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:4:5: Class 'Select' looks like designed for extension (can be subclassed), but the method 'setSelect' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Select' final or making the method 'setSelect' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:4:27: Parameter comm should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:11:5: Class 'Select' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Select' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:11:21: Parameter player should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:17: Line is longer than 100 characters (found 133). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:18: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:23: Line is longer than 100 characters (found 150). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:25: Line is longer than 100 characters (found 147). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:28: Line is longer than 100 characters (found 146). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:29: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:29:51: ')' is preceded with whitespace. [ParenPad]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:29:52: '>=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:34: Line is longer than 100 characters (found 153). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:36: Line is longer than 100 characters (found 150). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:39: Line is longer than 100 characters (found 147). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:39:24: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:41: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:45: Line is longer than 100 characters (found 151). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Select.java:46: Line is longer than 100 characters (found 134). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:3:8: Unused import - fileio.input.LibraryInput. [UnusedImports]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:20:37: Name 'SearchedPlaylists' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:35:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getPlayedPodcastForTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getPlayedPodcastForTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:39:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setPlayedPodcastForTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setPlayedPodcastForTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:39:41: Parameter playedPodcastForTime should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:43:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'copyAllUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'copyAllUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:43:46: Parameter users should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:45:13: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:52:9: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'copyUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'copyUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:52:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:52:30: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:57:9: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'removeSearchedSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'removeSearchedSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:57:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:60:9: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'removeSearchedPodcasts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'removeSearchedPodcasts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:60:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:63:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getSearchedSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getSearchedSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:66:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getSearchedPodcasts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getSearchedPodcasts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:70:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getSelectedSearch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getSelectedSearch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:74:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setSelectedSearch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setSelectedSearch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:74:35: Parameter selectedSearch should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:77:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'selectedSearch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'selectedSearch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:77:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:77:32: Parameter selctedSaerch should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:77:54: Parameter timestamp should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:82:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getLoadedPodcast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getLoadedPodcast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:86:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setLoadedPodcast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setLoadedPodcast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:86:34: Parameter loadedPodcast should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:90:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getLoadedPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getLoadedPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:94:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setLoadedPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setLoadedPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:94:35: Parameter loadedPlaylist should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:98:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getSearchedPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getSearchedPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:102:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setSearchedPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setSearchedPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:102:38: Parameter searchedPlaylists should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:106:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getLoadedSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getLoadedSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:109:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'addLikedSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'addLikedSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:109:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:109:30: Parameter song should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:110:34: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:110:35: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:111:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'removeLikedSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'removeLikedSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:111:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:111:33: Parameter song should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:114:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getLikedSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getLikedSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:118:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setLikedSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setLikedSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:118:31: Parameter likedSongs should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:122:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setLoadedSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setLoadedSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:122:31: Parameter loadedSong should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:126:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'addPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'addPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:126:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:126:29: Parameter playlist should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:129:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:133:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:133:30: Parameter playlists should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:137:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getRemainedTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getRemainedTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:141:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getLastPlay' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getLastPlay' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:145:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setLastPlay' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setLastPlay' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:145:29: Parameter lastPlay should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:149:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setRemainedTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setRemainedTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:149:33: Parameter remainedTime should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:153:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getLastPlayPause' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getLastPlayPause' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:157:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setLastPlayPause' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setLastPlayPause' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:157:34: Parameter lastPlayPause should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:161:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'isPaused' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'isPaused' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:165:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setPaused' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setPaused' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:165:27: Parameter paused should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:169:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'isShuffle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'isShuffle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:173:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setShuffle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setShuffle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:173:28: Parameter shuffle should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:177:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getRepeat' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getRepeat' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:181:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setRepeat' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setRepeat' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:181:27: Parameter repeat should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:185:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'isSuccessfullLoad' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'isSuccessfullLoad' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:189:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setSuccessfullLoad' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setSuccessfullLoad' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:189:36: Parameter successfullLoad should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:193:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'isSuccessfulSelect' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'isSuccessfulSelect' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:197:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setSuccessfulSelect' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setSuccessfulSelect' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:197:37: Parameter successfulSelect should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:201:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getLastTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getLastTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:205:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setLastTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setLastTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:205:34: Parameter lastTimestamp should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:209:5: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setSearchedPodcasts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setSearchedPodcasts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:209:37: Parameter searchedPodcasts should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:212:9: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setSearchedSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setSearchedSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:212:38: Parameter searchedSongs should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:219:9: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:223:9: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:227:9: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:231:9: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:235:9: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/UserClass.java:239:9: Class 'UserClass' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserClass' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPreferredSongs.java:3:48: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPreferredSongs.java:4:5: Class 'ShowPreferredSongs' looks like designed for extension (can be subclassed), but the method 'setShowPreferredSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowPreferredSongs' final or making the method 'setShowPreferredSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPreferredSongs.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPreferredSongs.java:4:39: Parameter comm should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPreferredSongs.java:9:5: Class 'ShowPreferredSongs' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowPreferredSongs' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPreferredSongs.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPreferredSongs.java:9:21: Parameter player should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPreferredSongs.java:12:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/ShowPreferredSongs.java:13:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:9:36: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:10:5: Class 'Status' looks like designed for extension (can be subclassed), but the method 'setLoad' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Status' final or making the method 'setLoad' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:10:25: Parameter comm should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:15:5: Class 'Status' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Status' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:15:21: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:15:22: Parameter player should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:21:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:26:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:37: Line is longer than 100 characters (found 132). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:61: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:65: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:77: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:88: Line is longer than 100 characters (found 132). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Status.java:107:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Main.java:6:8: Unused import - com.fasterxml.jackson.databind.JsonNode. [UnusedImports]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Main.java:10:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Main.java:13:15: Using the '.*' form of import should be avoided - java.io.*. [AvoidStarImport]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Main.java:18:8: Unused import - java.util.Arrays. [UnusedImports]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Main.java:82: Line is longer than 100 characters (found 138). [LineLength]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Main.java:82:79: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Main.java:82:79: '+' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Main.java:82:135: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Main.java:82:135: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Main.java:82:136: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Main.java:93:13: 'switch' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/Main.java:93:13: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PodcastClass.java:13:5: Class 'PodcastClass' looks like designed for extension (can be subclassed), but the method 'getPlayedForTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PodcastClass' final or making the method 'getPlayedForTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PodcastClass.java:17:5: Class 'PodcastClass' looks like designed for extension (can be subclassed), but the method 'setPlayedForTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PodcastClass' final or making the method 'setPlayedForTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PodcastClass.java:17:34: Parameter playedForTime should be final. [FinalParameters]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PodcastClass.java:24:5: Class 'PodcastClass' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PodcastClass' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PodcastClass.java:28:5: Class 'PodcastClass' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PodcastClass' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PodcastClass.java:32:5: Class 'PodcastClass' looks like designed for extension (can be subclassed), but the method 'getOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PodcastClass' final or making the method 'getOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PodcastClass.java:36:5: Class 'PodcastClass' looks like designed for extension (can be subclassed), but the method 'setOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PodcastClass' final or making the method 'setOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PodcastClass.java:40:5: Class 'PodcastClass' looks like designed for extension (can be subclassed), but the method 'getEpisodes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PodcastClass' final or making the method 'getEpisodes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/main/PodcastClass.java:44:5: Class 'PodcastClass' looks like designed for extension (can be subclassed), but the method 'setEpisodes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PodcastClass' final or making the method 'setEpisodes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/Tema1.2/Tema1/./src/fileio/input/UserInput.java:3:8: Unused import - java.util.ArrayList. [UnusedImports]
Audit done.
Checkstyle ends with 516 errors.
